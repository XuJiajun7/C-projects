#include <iostream>
#include <cmath>
using namespace std;

// Returns true if the queen in column c is ok
bool ok(int q[], int c) {
    for (int i =0; i < c; i++) {
        if (q[c] == q[i] || c - i == abs(q[c] - q[i])) {
            return false;
        }
    }    
    return true;
}

void print(int e[]) {
   static int numSolutions = 0;
   cout << "Solution #" << ++numSolutions << ": ";
   if (numSolutions > 92) exit(0);
   for (int i = 0; i < 8; i++) {
        cout << e[i];
    } // Print the array
   cout << "\n";
}

int main() {
   int q[8] = {}; // Initialize the array to 0.
   int c = 0, r = 0;   
   q[0] = 0;// Start in the 1st row, 1st column
   while (c >= 0) { // End the loop if you backtrack from the first column
      c++;// Move to the next column
      if (c == 8) { // If you have passed the last column,
         print(q);
         c--;
         r = q[c]; //q[c]++ Call the print function and backtrack
      } else r = -1;// Otherwise, move to one before the first row
      
      while (c >= 0) {
         r++; // Move to the next row
         q[c] = r;
         bool check = ok(q, c); 
         if (q[c] == 8) { 
             c--; // If you have passed the end of the column, backtrack
             r = q[c]; //q[c]++
         }
         else if (check) {
             break; // Otherwise, call the ok function.  If it returns true, go back to the beginning of the outer loop.
         }
         
      }
   }
   return 0;
}
